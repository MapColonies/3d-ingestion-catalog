global:
  cloudProvider:
    dockerRegistryUrl: 
    flavor: openshift
    imagePullSecretName: 
  imagePullPolicy: IfNotPresent
  tracing: {}
  metrics: {}
  environment: 'development'

  postgres:
    host: 
    port: 
    schema: ''
    name: ''
    user:
      requirePassword: false
      rejectUnauthorized: true
      useExternal: false
      secretName: ''
      username: ''
      password: ''
    ssl:
      enabled: false
      useExternal: true
      secretName: ''
      caFileName: ''
      certFileName: ''
      keyFileName: ''

cloudProvider:
    dockerRegistryUrl: 
    flavor: 
    imagePullSecretName: 
imagePullPolicy: 
environment: 

nodePort: 30030
replicaCount: 1
revisionHistoryLimit: 5 # Amount of revisions we keep

livenessProbe:
  enabled: true
  initialDelaySeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  path: /liveness

readinessProbe:
  enabled: true
  initialDelaySeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  path: /liveness

postgres:
  host: 
  port: 
  schema: 
  name: 
  user:
    requirePassword: false
    rejectUnauthorized: false
    useExternal: false
    secretName: 
    username: 
    password: 
  ssl:
    enabled: false
    useExternal: false
    secretName: ''
    caFileName: ''
    certFileName: ''
    keyFileName: ''

ca:
  enabled: false
  useExternal: false
  secretName: 
  path: 
  key: 

extraVolumes: {}

extraVolumeMounts: {}

sidecars: {}

podAnnotations: {}

image:
  repository: 3d-ingestion-catalog
  tag: v5.1.1


env:
  port: 80
  targetPort: 8080
  protocol: TCP
  logLevel: info
  logPrettyPrintEnabled: false
  responseCompressionEnabled: true
  requestPayloadLimit: 1mb
  tracing:
    enabled: false
    url: ''
  metrics:
    enabled: false
    url: ''

resources:
  enabled: true
  value:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

route:
  enabled: false
  path: /
  host: 
  timeout:
    enabled: false # defaults to 30s by openshift
    duration: 60s # supported units (us, ms, s, m, h, d)
  rewriteTarget: ''
  tls:
    enabled: true
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
    useCerts: false
    certificate: ''
    key: ''
    caCertificate: ''

ingress:
  enabled: false
  path: /
  host: localhost
  cors:
    enabled: true
    origin: '*'