{{- $releaseName := .Release.Name -}}
{{- $chartName := include "3d-ingestion-catalog.name" . -}}
{{- $cloudProviderFlavor := include "3d-ingestion-catalog.cloudProviderFlavor" . -}}
{{- $tag := include "3d-ingestion-catalog.tag" . -}}
{{- $cloudProviderDockerRegistryUrl := include "3d-ingestion-catalog.cloudProviderDockerRegistryUrl" . -}}
{{- if .Values.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $releaseName }}-{{ $chartName }}
  labels:
    app: {{ $chartName }}
    component: {{ $chartName }}
    environment: {{ include "3d-ingestion-catalog.environment" . }}
    release: {{ $releaseName }}
    {{- include "3d-ingestion-catalog.labels" . | nindent 4 }}
{{- with .Values.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
    {{- if .Values.env.metrics.enabled }}
    prometheus.io/port: {{ .Values.env.metrics.prometheus.port | quote }}
    prometheus.io/scrape: {{ .Values.env.metrics.prometheus.scrape | quote }}
    {{- end }}
{{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ $chartName }}
      release: {{ $releaseName }}
      run: {{ $releaseName }}-{{ $chartName }}
      {{- include "3d-ingestion-catalog.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ $chartName }}
        release: {{ $releaseName }}
        run: {{ $releaseName }}-{{ $chartName }}
        {{- include "3d-ingestion-catalog.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ $releaseName }}-{{ $chartName }}-deployment
          {{- with .Values.image }}
          image: {{ $cloudProviderDockerRegistryUrl }}{{ .repository }}:{{ $tag }}
          {{- end }}
          env:
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.secretName }}
                  key: username
            {{- if .Values.db.requirePassword }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.secretName }}
                  key: password
            {{- end }}
            - name: SERVER_PORT
              value: {{ .Values.env.targetPort | quote }}
          envFrom:
            - configMapRef:
                name: {{ $releaseName }}-{{ $chartName }}-configmap
            # - secretRef:
            #     name: {{ $releaseName }}-{{ $chartName }}-secret

          ports:
            - name: http
              containerPort: {{ .Values.env.targetPort }}
              protocol: {{ .Values.env.protocol }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.initialDelaySeconds }}
            httpGet:
              path: /liveness
              port: http
          {{- if .Values.resources.enabled }}
          resources:
            {{- toYaml .Values.resources.value | nindent 12 }}
          {{- end }}
          {{- if or .Values.db.sslEnable .Values.logsFilebeat.enabled }}
          volumeMounts:
            {{- if .Values.db.sslEnable }}
            - name: cert-conf
              mountPath: /tmp/certs
              readOnly: true
            {{- end }}
            {{- if .Values.logsFilebeat.enabled }}
            - name: logs
              mountPath: {{ .Values.logsFilebeat.mountPath }}
            {{- end }}
          {{- end }}
        {{- if .Values.logsFilebeat.enabled }}
          command: ["/bin/sh", "-c", "node --max_old_space_size=512 ./index.js >> /usr/src/app/logs/log.log 2>&1"]
        - name: filebeat
          image: {{ .Values.logsFilebeat.filebeatImage }}
          args: [ "-c", "/etc/filebeat.yml", "-e" ]
          volumeMounts:
            - name: logs
              mountPath: {{ .Values.logsFilebeat.mountPath }}
            - name: config
              mountPath: /etc/filebeat.yml
              subPath: filebeat.yml
        {{- end }}
      {{- if or .Values.db.sslEnable .Values.logsFilebeat.enabled }}
      volumes:
        {{- if .Values.db.sslEnable }}
        - name: cert-conf
          secret:
            secretName: {{ .Values.db.secretName }}
        {{- end }}
        {{- if .Values.logsFilebeat.enabled }}
        - name: logs
          emptyDir: {}
        - name: config
          configMap:
            name: filebeat-config
        {{- end }}
      {{- end }}
      terminationGracePeriodSeconds: 30
{{- end -}}