openapi: 3.0.1
security: []
info:
  title: 3d ingestion catalog
  description: Service to create 3d ingestion catalog
  version: 5.4.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  /metadata:
    get:
      operationId: getAll
      summary: Get all 3d models metadata records
      tags:
        - metadata
      responses:
        '200':
          $ref: '#/components/responses/list'
        '204':
          description: No Content
        5XX:
          $ref: '#/components/responses/unexpectedError'
    post:
      operationId: createRecord
      summary: Create a new 3d model metadata record
      tags:
        - metadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                ./Schema/3dCatalog/3dMetadata.yaml#/components/schemas/catalog-payload
      responses:
        '201':
          $ref: '#/components/responses/created'
        '400':
          $ref: '#/components/responses/badRequest'
        5XX:
          $ref: '#/components/responses/unexpectedError'
  /metadata/find:
    post:
      operationId: findRecords
      summary: return list of 3d model matching records
      tags:
        - metadata
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/findRecordPayload'
      responses:
        '200':
          $ref: '#/components/responses/list'
        '400':
          $ref: '#/components/responses/badRequest'
        '500':
          $ref: '#/components/responses/unexpectedError'
  /metadata/lastVersion/{identifier}:
    get:
      operationId: findLastVersion
      summary: Find last version of productID
      tags:
        - metadata
      parameters:
        - $ref: '#/components/parameters/identifier'
      responses:
        5XX:
          $ref: '#/components/responses/unexpectedError'
  /metadata/{identifier}:
    get:
      operationId: getRecord
      summary: Get a specific 3d model metadata record by record identifier
      tags:
        - metadata
      parameters:
        - $ref: '#/components/parameters/identifier'
      responses:
        '200':
          $ref: '#/components/responses/success'
        '404':
          $ref: '#/components/responses/notFound'
        5XX:
          $ref: '#/components/responses/unexpectedError'
    patch:
      operationId: updateRecord
      summary: Update partial 3d model metadata record fields
      tags:
        - metadata
      parameters:
        - $ref: '#/components/parameters/identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                ./Schema/3dCatalog/3dMetadata.yaml#/components/schemas/updatePayload
      responses:
        '200':
          $ref: '#/components/responses/success'
        '400':
          $ref: '#/components/responses/badRequest'
        '404':
          $ref: '#/components/responses/notFound'
        5XX:
          $ref: '#/components/responses/unexpectedError'
    delete:
      operationId: deleteRecord
      summary: Delete a specific 3d model metadata record by record identifier
      tags:
        - metadata
      parameters:
        - $ref: '#/components/parameters/identifier'
      responses:
        '204':
          description: No Content
        5XX:
          $ref: '#/components/responses/unexpectedError'
  /metadata/status/{identifier}:
    patch:
      operationId: publishRecord
      summary: Update status publish of record
      tags:
        - metadata
      parameters:
        - $ref: '#/components/parameters/identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                ./Schema/3dCatalog/3dMetadata.yaml#/components/schemas/updateStatus
      responses:
        '200':
          $ref: '#/components/responses/success'
        '400':
          $ref: '#/components/responses/badRequest'
        '404':
          $ref: '#/components/responses/notFound'
        5XX:
          $ref: '#/components/responses/unexpectedError'
components:
  parameters:
    identifier:
      in: path
      name: identifier
      required: true
      schema:
        type: string
      description: Metadata record identifier
  responses:
    success:
      description: OK
      content:
        application/json:
          schema:
            $ref: ./Schema/3dCatalog/3dMetadata.yaml#/components/schemas/metadata
    list:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ./Schema/3dCatalog/3dMetadata.yaml#/components/schemas/metadata
    created:
      description: Created
      content:
        application/json:
          schema:
            $ref: ./Schema/3dCatalog/3dMetadata.yaml#/components/schemas/metadata
    badRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    notFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    unexpectedError:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
  schemas:
    recordId:
      type: string
      format: uuid
      description: Id of product
    findRecordPayload:
      type: object
      description: 3d-tiles metadata find record payload
      properties:
        id:
          $ref: '#/components/schemas/recordId'
        productId:
          type: string
          nullable: true
          description: ID of product
        productName:
          type: string
          maxLength: 120
          description: Name of product
        productType:
          type: string
          enum:
            - 3DPhotoRealistic
            - QuantizedMeshDTMBest
          description: Type of product (3DPhotoRealistic)
          example: 3DPhotoRealistic
        creationDate:
          type: string
          format: date-time
          nullable: true
          description: Creation date
        sourceDateStart:
          type: string
          format: date-time
          description: Oldest date of taken photo
        sourceDateEnd:
          type: string
          format: date-time
          description: Newest date of taken photo
        minResolutionMeter:
          type: number
          format: double
          nullable: true
          example: 1.1
          minimum: 0.01
          maximum: 8000
          description: Minimum resolution in meters
        maxResolutionMeter:
          type: number
          format: double
          nullable: true
          example: 1.5
          minimum: 0.01
          maximum: 8000
          description: Maximum resolution in meters
        maxAccuracyCE90:
          type: number
          format: double
          minimum: 0
          maximum: 999
          description: Maximum absolute horizontal accuracy
        absoluteAccuracyLE90:
          type: number
          format: double
          minimum: 0
          maximum: 999
          description: Absolute vertical accuracy
        accuracySE90:
          type: number
          format: double
          minimum: 0
          nullable: true
          maximum: 250
          description: Absolute spherical accuracy
        relativeAccuracySE90:
          type: number
          format: double
          nullable: true
          minimum: 0
          maximum: 100
          description: Relative vertical accuracy
        visualAccuracy:
          type: number
          format: double
          nullable: true
          minimum: 0
          maximum: 100
          description: Measure of visual quality
        heightRangeFrom:
          type: number
          format: double
          nullable: true
          description: Minimum height range of ground
        heightRangeTo:
          type: number
          format: double
          nullable: true
          description: Maximum height range of ground
        srsId:
          type: string
          example: 4326
          description: ID of srs
        srsName:
          type: string
          description: Name of the srsID
        classification:
          type: string
          example: '5'
          description: Classification of the product
        productionSystem:
          type: string
          description: Production system
        productionSystemVer:
          type: string
          maxLength: 20
          description: Version production system
        producerName:
          type: string
          description: The name of the producer (product owner)
        minFlightAlt:
          type: number
          format: double
          description: Minimum height of the flight
        maxFlightAlt:
          type: number
          nullable: true
          format: double
          description: Maximum height of the flight
        geographicArea:
          type: string
          nullable: true
          description: Area inside the region
        productStatus:
          type: string
          enum:
            - UNPUBLISHED
            - PUBLISHED
          description: The status of the model
      additionalProperties: false
    error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
