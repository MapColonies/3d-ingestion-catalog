openapi: 3.0.1
info:
  title: 3d ingestion catalog
  description: Service to create 3d ingestion catalog
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  /metadata:
    get:
      operationId: getAll
      summary: Get all 3d models metadata records
      tags:
        - metadata
      responses:
        200:
          $ref: '#/components/responses/list'
        204:
          description: No Content
        '5XX':
          $ref: '#/components/responses/unexpectedError'
    post:
      operationId: createRecord
      summary: Create a new 3d model metadata record
      tags:
        - metadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payload'
      responses:
        201:
          $ref: '#/components/responses/created'
        400:
          $ref: '#/components/responses/badRequest'
        '5XX':
          $ref: '#/components/responses/unexpectedError'
  /metadata/{identifier}:
    get:
      operationId: getRecord
      summary: Get a specific 3d model metadata record by record identifier
      tags:
        - metadata
      parameters:
        - $ref: '#/components/parameters/identifier'
      responses:
        200:
          $ref: '#/components/responses/success'
        404:
          $ref: '#/components/responses/notFound'
        '5XX':
          $ref: '#/components/responses/unexpectedError'
    put:
      operationId: updateRecord
      summary: Update 3d model metadata record fields
      tags:
        - metadata
      parameters:
        - $ref: '#/components/parameters/identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payload'
      responses:
        200:
          $ref: '#/components/responses/success'
        400:
          $ref: '#/components/responses/badRequest'
        404:
          $ref: '#/components/responses/notFound'
        '5XX':
          $ref: '#/components/responses/unexpectedError'
    patch:
      operationId: updatePartialRecord
      summary: Update partial 3d model metadata record fields
      tags:
        - metadata
      parameters:
        - $ref: '#/components/parameters/identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updatePayload'
      responses:
        200:
          $ref: '#/components/responses/success'
        400:
          $ref: '#/components/responses/badRequest'
        404:
          $ref: '#/components/responses/notFound'
        '5XX':
          $ref: '#/components/responses/unexpectedError'
    delete:
      operationId: deleteRecord
      summary: Delete a specific 3d model metadata record by record identifier
      tags:
        - metadata
      parameters:
        - $ref: '#/components/parameters/identifier'
      responses:
        204:
          description: No Content
        '5XX':
          $ref: '#/components/responses/unexpectedError'
components:
  parameters:
    identifier:
      in: path
      name: identifier
      required: true
      schema:
        type: string
      description: Metadata record identifier
  responses:
    success:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/metadata'
    list:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/metadata'
    created:
      description: Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/metadata'
    badRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    notFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    unexpectedError:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
  schemas:
    error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    link:
      type: object
      description: Structure of link
      required:
        - protocol
        - url
      properties:
        name:
          type: string
        description:
          type: string
        protocol:
          type: string
        url:
          type: string
    payload:
      type: object
      description: 3d tiles metadata payload
      properties:
        productName:
          type: string
        productVersion:
          type: string
        productType:
          type: string
        description:
          type: string
        creationDate:
          type: string
          format: date-time
          description: Creation date
        sourceStartDate:
          type: string
          format: date-time
        sourceEndDate:
          type: string
          format: date-time
        minResolutionMeter:
          type: number
        maxResolutionMeter:
          type: number
        minResolutionDeg:
          type: number
        maxResolutionDeg:
          type: number
        nominalResolution:
          type: string
        minAccuracyCE90:
          type: number
        maxAccuracyCE90:
          type: number
        accuracyLE90:
          type: number
        accuracySE90:
          type: number
        relativeAccuracyLE90:
          type: number
        visualAccuracy:
          type: number
        sensors:
          type: string
        footprint:
          type: string
        heightRangeFrom:
          type: number
        heightRangeTo:
          type: number
        srsId:
          type: number
        srsName:
          type: string
        srsOrigin:
          type: string
        region:
          type: string
        classification:
          type: string
        compartmentalization:
          type: string
        productionSystem:
          type: string
        productionSystemVer:
          type: string
        producerName:
          type: string
        productionMethod:
          type: string
        minFlightAlt:
          type: number
        maxFlightAlt:
          type: number
        geographicArea:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
          description: Structure of links
        boundingBox:
          type: string
    metadata:
      allOf:
        - $ref: '#/components/schemas/payload'
        - type: object
          required:
            - id
            - insertDate
          properties:
            id:
              type: string
            insertDate:
              type: string
              format: date-time     
    updatePayload:
      type: object
      description: 3d tiles metadata update payload
      properties:
        title:
          type: string
          description: Title
        description:
          type: string
          description: Description
        classification:
          type: string
          description: Product classification
        sensorType:
          type: string
          description: The sensor used as the source of the product
